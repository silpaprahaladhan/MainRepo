@model Nirast.Pcms.Web.Models.ClientModel
@{
    ViewBag.Title = "ClientInvoiceSettings";
    Layout = "~/Views/Shared/_AdminDashboardLayout.cshtml";
}

<head>
    <script type="text/javascript" language="javascript" src="~/js/jquery.dataTables.min.js"></script>

    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.16/css/jquery.dataTables.min.css">
    @Styles.Render("~/css/CustomStyles.css")
    @Styles.Render("~/build/css/Common.css")

    @*<script type="text/javascript">

        </script>*@

</head>
<div class="container animsition">
    <div class="row profile_Style">
        <div class="panel panel-default report-style ">
            <div class="panel-heading">
                <h4>Select Location</h4>
            </div>
            <div class="panel-body">
                <div class="form-horizontal">
                    <div class="row">
                        <div class="col-md-2">
                            <label class="label-style">Country</label>
                            @Html.DropDownListFor(model => model.CountryId1, ViewData["ListCountry1"] as SelectList, "--Select--", new { @Id = "ddlCountry1", @class = "form-control labelStyle", @onchange = "GetStates1()" })
                            @Html.ValidationMessageFor(model => model.CountryId1, "", new { @class = "no-padding required" })
                        </div>
                        <div class="col-md-2">
                            <label class="label-style">State</label>
                            @Html.DropDownListFor(model => model.StateId1, ViewData["StateList1"] as SelectList, "--Select--", new { @Id = "ddlStates1", @class = "form-control labelStyle", @onchange = "GetCities1()" })
                            @Html.ValidationMessageFor(model => model.StateId1, "", new { @class = "no-padding required" })
                        </div>
                        <div class="col-md-2">
                            <label class="label-style">City</label>
                            @Html.DropDownListFor(model => model.CityId1, ViewData["ListCity1"] as SelectList, "--Select--", new { @Id = "ddlCity1", @class = "form-control labelStyle", onchange = "SetCity1()" })
                            @Html.ValidationMessageFor(model => model.CityId1, "", new { @class = "no-padding required" })
                        </div>
                        <div class="col-md-2">
                            <label class="label-style">Franchise/Branch</label>
                            @Html.DropDownListFor(model => model.BranchId2, ViewData["ListCity1"] as SelectList, "--Select--", new { @Id = "Branch1", @class = "form-control labelStyle", onchange = "SetCity1()" })
                            @Html.ValidationMessageFor(model => model.BranchId2, "", new { @class = "no-padding required" })
                        </div>
                        <div class="col-md-3" style="margin-top:39px;">
                            <button class="btn btn-primary float-left editButton" title="Edit" onclick="LoadClientByLocation()">Submit</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="equal-height-panels">
            @if (ViewBag.Error != null)
            {
                <div><p class="alert custom-alert-danger col-md-6 col-md-offset-3 statusmessage">@ViewBag.Error</p></div>
            }
            else
            {
                <div class="col-lg-12 col-md-12 col-sm-12 ">
                    @if (TempData["Success"] != null && TempData["Success"] != "")
                    {
                        <p class="alert alert-success statusmessage">@TempData["Success"]</p>
                    }
                    @if (TempData["Failure"] != null && TempData["Failure"] != "")
                    {
                        <p class="alert custom-alert-danger statusmessage">@TempData["Failure"]</p>
                    }
                    @using (Html.BeginForm("AddInvoiceDetails", "Client", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h4>Client Invoice Settings</h4>
                            </div>
                            <div class="panel-body">
                                <div class="col-md-12 col-lg-12 form-group">
                                    <div class="row">
                                        <div class="col-md-4 col-lg-4">
                                            @Html.HiddenFor(model => model.ClientId)
                                            @Html.HiddenFor(model => model.ClientName)
                                            @Html.Label("Client", new { @class = "control-label label-style marginTopStyle" })<span class="mandatoryField">*</span>
                                            @Html.DropDownListFor(model => model.ClientId, ViewData["listClients"] as SelectList, "--Select--", new { @Id = "ddlClient", @class = " form-control labelStyle", onchange = "GetInvoice()" })


                                            @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger required" })
                                        </div>
                                        <div class="col-md-4 col-lg-4">
                                            @Html.Label("Invoice Prefix", new { @class = "control-label label-style marginTopStyle" })<span class="mandatoryField">*</span>
                                            @Html.TextBoxFor(model => model.InvoicePrefix, new { @class = "form-control labelStyle" })
                                            @Html.ValidationMessageFor(model => model.InvoicePrefix, "", new { @class = "text-danger required" })
                                        </div>
                                        <div class="col-md-4 col-lg-4">
                                            @Html.Label("Next Invoice Number", new { @class = "control-label label-style marginTopStyle" })<span class="mandatoryField">*</span>
                                            @Html.TextBoxFor(Model => Model.InvoiceNumber, "", new { @class = "form-control labelStyle" })
                                            @Html.ValidationMessageFor(model => model.InvoiceNumber, "", new { @class = "text-danger required" })
                                        </div>
                                    </div>
                                </div>
                                <div class="text-center form-group city">
                                    @if (ViewBag.AllowEdit)
                                    {
                                        <input type="submit" class="btn btn-primary m-t-10" value="Save" onclick="clientValidation()">
                                        <label class="btn btn-primary  m-t-10" value="Cancel" onclick="reload()">Cancel</label>
                                    }
                                    else
                                    {
                                        <div class="wrapper">
                                            <input type="submit" class="btn btn-primary m-t-10" value="Save" disabled>
                                            <label class="btn btn-primary m-t-10" value="Cancel" onclick="reload()">Cancel</label>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                    <div class="col-lg-12 col-md-12 col-sm-12 no-padding">
                        @{Html.RenderAction("ClientInvoiceSettingsList");}
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<script type="text/javascript">
    function clientValidation() {
       // debugger;
        if ($('#ddlClient').val() == '') {
            alert("Please select a client")

        }

    }
    function GetInvoice() {
       // debugger;
      

        $(document).ready(function () {
            $('#ClientInvoice').DataTable({
                "pagingType": "full_numbers"
            });
            $("#ddlYearly").hide();
            $("#ddlMonthly").hide();
            $("#txtFromDate").hide();
            $("#txtToDate").hide();
            $("#ddlSearchRange").change(function () {
                if ($(this).val() == "1") { // It doesn't work over here.
                    $("#ddlYearly").show();
                    $("#ddlMonthly").hide();
                    $("#txtFromDate").hide();
                    $("#txtToDate").hide();
                    document.getElementById("ddlCountry").selectedIndex = "1";
                    document.getElementById("ddlYearly").selectedIndex = "0";
                    document.getElementById("ddlMonthly").selectedIndex = "0";
                    document.getElementById("txtFromDate").value = "";
                    document.getElementById("txtToDate").value = "";

                } else if ($(this).val() == "2") {
                    $("#ddlYearly").show();
                    $("#ddlMonthly").show();
                    $("#txtFromDate").hide();
                    $("#txtToDate").hide();
                    document.getElementById("ddlYearly").selectedIndex = "0";
                    document.getElementById("txtFromDate").value = "";
                    document.getElementById("txtToDate").value = "";
                }
                else if ($(this).val() == "3") {
                    $("#ddlYearly").hide();
                    $("#ddlMonthly").hide();
                    $("#txtFromDate").show();
                    $("#txtToDate").show();
                    document.getElementById("ddlYearly").selectedIndex = "0";
                    document.getElementById("ddlMonthly").selectedIndex = "0";
                }
                else {
                    $("#ddlYearly").hide();
                    $("#ddlMonthly").hide();
                    $("#txtFromDate").hide();
                    $("#txtToDate").hide();
                    document.getElementById("txtFromDate").value = "";
                    document.getElementById("txtToDate").value = "";
                    document.getElementById("ddlYearly").selectedIndex = "0";
                    document.getElementById("ddlMonthly").selectedIndex = "0";
                }
            });
        });
    }

    function SelectedState() {
        $('#StateId').val($('#ddlStates').val());
    }

    function LoadClientByLocation() {
        $.ajax({
            url: "/Client/LoadClientByLocationInvoice",
            type: "POST",
            data: {
                countryId: $('#ddlCountry1').val(),
                stateId: $('#ddlStates1').val(),
                cityId: $('#ddlCity1').val()
            },
            success: function (feed) {
                alert("Client");
                $.ajax({
                    url: "/Client/LoadClient",
                    type: "POST",
                    data: {
                       
                        countryId: $('#ddlCountry1').val(),
                        stateId: $('#ddlStates1').val(),
                        cityId: $('#ddlCity1').val()
                    },
                    success: function (result) {
                        alert("ok");
                        $("#ddlClient").html(""); // clear before appending new list
                        $("#ddlClient").append($('<option></option>').val("").html("--Select--"));
                        $.each($.parseJSON(result), function (i, care) {
                            $("#ddlClient").append($('<option></option>').val(care.ClientId).html(care.ClientName));
                        })
                    },
                   
                });
                spinnerVisible = true;
                hideProgress();
                // alert(feed);
                $('#ClientInvoice').hide();
                $('#ResultList').html(feed);
                debugger

             

                //$("#ddlClient").html(""); 
                //$("#ddlClient").append($('<option></option>').val("").html("--Select--"));
             
                //$.each($.parseJSON(result), function (i, care) {
                //    alert(care.ClientId);
                //    $("#ddlClient").append($('<option></option>').val(care.ClientId).html(care.ClientName));
                //    alert(care.ClientId);
                //})
                

             
            },
            
            error: function (data) {
                spinnerVisible = true;
                hideProgress();
                logError(data.statusText + ' - Error occurred while fetching data. Function: searchClientByLocation(). Page: ManageClient.cshtml');
                //alert('Some network error has occurred. Please try again after some time.');
            }
        });
    }



    $("#ddlCity1").change(function () {
        var cityId = $('#ddlCity1').val();
        //alert(stateId);

        $.ajax({
            url: '/Admin/GetBranch?city=' + cityId,
            type: "POST",
            contentType: "application/json; charset=utf-8",
            datatype: JSON,
            success: function (data) {
                console.log(data);
                var ddlState = $("#Branch1");
                ddlState.empty().append('<option selected="selected" value="0">--Select--</option>');

                $.each(data, function (data, value) {

                    ddlState.append($("<option></option>").val(value.BranchId).html(value.BranchName));
                });

            }
        });
    });
</script>

