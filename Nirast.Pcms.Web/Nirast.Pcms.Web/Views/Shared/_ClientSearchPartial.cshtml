
@using Nirast.Pcms.Web.Models;
@model List<Nirast.Pcms.Web.Models.ClientModel>

        <table class="table table-borderless table-striped table-earning padding-top-10" id="clientSearchList">
            <thead>
                <tr class="row">
                    <th style="width:25%">Client Name</th>
                    <th style="width:20%">Address</th>
                    <th style="width:20%">State</th>
                    <th style="width:20%">City</th>
                    <th style="width:15%">Phone No</th>
                    <th style="width:15%">Login Status</th>
                    <th class="text-right">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {

                    var status = @item.ClientStatus == Enums.ClientStatus.Active ? "Active" : "Disabled";
                    <tr class="row">
                        <td style="width:25%" onclick="location.href ='@(Url.Action("ClientDetails", "Client", new {clientId = item.ClientId }))'"> @item.ClientName</td>
                        <td style="width:20%" onclick="location.href ='@(Url.Action("ClientDetails", "Client", new {clientId = item.ClientId }))'">@item.Address1</td>
                        <td style="width:20%" onclick="location.href ='@(Url.Action("ClientDetails", "Client", new {clientId = item.ClientId }))'">@item.State1</td>
                        <td style="width:20%" onclick="location.href ='@(Url.Action("ClientDetails", "Client", new {clientId = item.ClientId }))'">@item.City1</td>
                        <td style="width:15%" onclick="location.href ='@(Url.Action("ClientDetails", "Client", new {clientId = item.ClientId }))'">@item.PhoneNo1</td>
                        <td style="width:15%" onclick="location.href ='@(Url.Action("ClientDetails", "Client", new {clientId = item.ClientId }))'">@status</td>


                        <td align="right">
                            <a class="btn btn-xs btn-primary fa" title="View" href="@Url.Action("ClientDetails", "Client", new { clientId = item.ClientId })"><span class="glyphicon glyphicon-eye-open"></span></a>
                            @{
                                if (item.ClientStatus == Enums.ClientStatus.Active)
                                {
                                    <button class="btn btn-xs btn-warning fa" title="Active" onclick="location.href='@Url.Action("ModifyClientStatus", "Client", new { clientId = item.ClientId, status = Convert.ToInt32(Enums.ClientStatus.InActive) })'"><span class="fa fa-toggle-on"></span></button>
                                }
                                else if (item.ClientStatus == Enums.ClientStatus.InActive)
                                {
                                    <button class="btn btn-xs btn-warning fa" title="InActive" onclick="location.href='@Url.Action("ModifyClientStatus", "Client", new { clientId = item.ClientId, status = Convert.ToInt32(Enums.ClientStatus.Active) })'"><span class="fa fa-toggle-off"></span></button>
                                }
                            }

                            <button href="#" class="btn btn-xs theme-button fa fa-key" title="Reset password" onclick="showUserDetails('@item.UserId')"></button>
                            <a style="background-color: deepskyblue;border-color:deepskyblue" class="btn btn-xs btn-primary btn-warning fa fa-hospital-o" title="View Schedules" onclick="viewSchedule(@item.ClientId,  @Convert.ToInt32(item.ClientStatus))"></a>
                            @*<i class="fa fa-hospital-o"></i>@Html.ActionLink("View Schedules", "ScheduledCalenderView", new { clientId = item.ClientId }, null)*@
                            <button style="background-color: royalblue;border-color:royalblue" class="btn btn-xs btn-primary btn-warning fa fa-user-md" title="Mapped Caregivers" data-toggle="modal" onclick="changeStatus('@item.ClientId')" data-target="#modal-delete"></button>
                            @{
                                if (item.ClientEmailStatus == Enums.ClientEmailStatus.Active)
                                {
                                    <button class="btn btn-xs btn-success fa" title="Schedule Email Enabled" onclick="location.href='@Url.Action("ChangeEmailStatus", "Client", new { clientId = item.ClientId, emailstatus = Convert.ToInt32(Enums.ClientEmailStatus.InActive) })'"><span class="fa fa-toggle-on"></span></button>
                                }
                                else if (item.ClientEmailStatus == Enums.ClientEmailStatus.InActive)
                                {
                                    <button class="btn btn-xs btn-danger fa" title="Schedule Email Disabled" onclick="location.href='@Url.Action("ChangeEmailStatus", "Client", new { clientId = item.ClientId, emailstatus = Convert.ToInt32(Enums.ClientEmailStatus.Active) })'"><span class="fa fa-toggle-off"></span></button>
                                }
                            }
                            @if (ViewBag.AllowDelete)
                            {
                                <button class="btn btn-xs btn-danger" title="Delete" data-toggle="modal" onclick="setClientId('@item.ClientId')" data-target="#modal-deleteclient"><span class="fa fa-minus-circle"></span></button>
                            }
                            else
                            {
                                <div class="wrapper">
                                    <button class="btn btn-xs btn-danger" title="Delete" disabled><span class="fa fa-minus-circle"></span></button>
                                </div>
                            }

                        </td>


                    </tr>
                }
            </tbody>
        </table>

