@model IList<Nirast.Pcms.Web.Models.UsersDetails>
@using Nirast.Pcms.Web.Models
@{
    ViewBag.Title = "ManagePublicUser";
    Layout = "~/Views/Shared/_AdminDashboardLayout.cshtml";
    var country = Session["CountryId"].ToString();
    var state = Session["StateID"].ToString();
    var city = Session["CityIdk"].ToString();
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ManagePublicUsers</title>
    <script src="~/css/AdminDashboard/jquery/dist/jquery.min.js"></script>

    <script type="text/javascript" language="javascript" src="~/js/jquery.dataTables.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.16/css/jquery.dataTables.min.css">
    @Styles.Render("~/css/CustomStyles.css")

</head>
<body>
    <div class="product-easy">
        <div class="container">
            <div class="row profile_Style">
                <div class="panel panel-default report-style " id="main">
                    <div class="panel-heading">
                        <h4>Select Location</h4>
                    </div>
                    <div class="panel-body">
                        <div class="form-horizontal">
                            <div class="row">
                                <div class="col-md-2" id="countrydiv">
                                    <label class="label-style">Country</label>
                                    @Html.DropDownListFor(model => model[0].CountryId1, ViewData["ListCountry1"] as SelectList, "--Select--", new { @Id = "ddlCountry1", @class = "form-control labelStyle", @onchange = "GetStates1()" })
                                    @Html.ValidationMessageFor(model => model[0].CountryId1, "", new { @class = "no-padding required" })
                                </div>
                                <div class="col-md-2" id="statediv">
                                    <label class="label-style">State</label>
                                    @Html.DropDownListFor(model => model[0].StateId1, ViewData["StateList1"] as SelectList, "--Select--", new { @Id = "ddlStates1", @class = "form-control labelStyle", @onchange = "GetCities1()" })
                                    @Html.ValidationMessageFor(model => model[0].StateId1, "", new { @class = "no-padding required" })
                                </div>
                                <div class="col-md-2" id="citydiv">
                                    <label class="label-style">City</label>
                                    @Html.DropDownListFor(model => model[0].CityId1, ViewData["ListCity1"] as SelectList, "--Select--", new { @Id = "ddlCity1", @class = "form-control labelStyle", onchange = "SetCity1()" })
                                    @Html.ValidationMessageFor(model => model[0].CityId1, "", new { @class = "no-padding required" })
                                </div>

                                <div class="col-md-2" id="branchdiv">
                                    <label class="label-style">Franchise/Branch</label>
                                    @Html.DropDownListFor(model => model[0].BranchId1, ViewData["ListBranch"] as SelectList, "--Select--", new { @Id = "Branch1", @class = "form-control labelStyle", onchange = "SetCity1()" })
                                    @Html.ValidationMessageFor(model => model[0].BranchId1, "", new { @class = "no-padding required" })
                                </div>
                                <div class="col-md-3" style="margin-top:39px;">
                                    <button class="btn btn-primary float-left editButton" title="Edit" onclick="searchClientByLocation()">Submit</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <script src="~/js/easyResponsiveTabs.js" type="text/javascript"></script>
            @if (ViewBag.Error != null)
            {
                <div><p class="alert custom-alert-danger col-md-6 col-md-offset-3 statusmessage">@ViewBag.Error</p></div>
            }
            else
            {
                <h3 class="h4-label">Manage Public Users</h3>
                if (TempData["Success"] != null)
                {
                    <p class="alert alert-success statusmessage">@TempData["Success"].ToString()</p>
                }

                <div class="row padding-top-10">
                    <div class="col-lg-12">
                        <input type="hidden" id="hdnCTId" />
                        <div class="filterable table-responsive ">
                            <table class="table table-striped padding-top-10 table-earning" id="userList">
                                <thead>
                                    <tr class="non-filter-header">
                                        <th>Name</th>
                                        <th>Email ID</th>
                                        <th>Phone</th>
                                        <th>StreetName</th>
                                        <th>City</th>

                                        <th>Login Status</th>
                                        <th>Email Verification</th>
                                        <th class="text-right">Action</th>
                                    </tr>
                                </thead>
                                <tbody id="publicuser_id">
                                    @foreach (var item in Model)
                                    {
                                        var verified = @item.UserVerified == true ? "Verified" : "Pending";
                                        var status = @item.UserStatus == Enums.UserStatus.Active ? "Active" : "Disabled";
                                        <tr>
                                            <td style="width:20%" onclick="location.href ='@(Url.Action("UserProfile", "PublicUser", new {@id = item.UserRegnId }))'">@item.FirstName @item.LastName</td>
                                            <td style="width:15%" onclick="location.href ='@(Url.Action("UserProfile", "PublicUser", new {@id = item.UserRegnId }))'">@item.EmailAddress</td>
                                            <td style="width:10%" onclick="location.href ='@(Url.Action("UserProfile", "PublicUser", new {@id = item.UserRegnId }))'">@item.PrimaryPhoneNo</td>
                                            <td style="width:15%" onclick="location.href ='@(Url.Action("UserProfile", "PublicUser", new {@id = item.UserRegnId }))'">@item.HouseName</td>
                                            <td style="width:15%" onclick="location.href ='@(Url.Action("UserProfile", "PublicUser", new {@id = item.UserRegnId }))'">@item.City</td>
                                            <td style="width:8%" onclick="location.href ='@(Url.Action("UserProfile", "PublicUser", new {@id = item.UserRegnId }))'">@status</td>

                                            <td style="width:8%" onclick="location.href ='@(Url.Action("UserProfile", "PublicUser", new {@id = item.UserRegnId }))'">@verified</td>
                                            <td class="text-right">
                                                @if (ViewBag.AllowEdit)
                                                {
                                                    <a class="btn btn-xs btn-primary" title="View" href="@Url.Action("UserProfile", "PublicUser", new { @id = item.UserRegnId })"><span class="fa fa-eye"></span></a>
                                                    <button href="#" class="btn btn-xs theme-button fa fa-key" title="Reset password" onclick="showBookingDetails('@item.UserRegnId')"></button>
                                                    if (item.UserStatus == Enums.UserStatus.Active)
                                                    {
                                                        <button class="btn btn-xs btn-warning" title="Make Inactive" onclick="changeStatus(@item.UserRegnId,@((int)Enums.UserStatus.InActive))"><span class="fa fa-toggle-on"></span></button>
                                                    }
                                                    else if (item.UserStatus == Enums.UserStatus.InActive)
                                                    {
                                                        <button class="btn btn-xs btn-warning" title="Make Active" onclick="changeStatus(@item.UserRegnId,@((int)Enums.UserStatus.Active))"><span class="fa fa-toggle-off"></span></button>
                                                    }
                                                }
                                                else
                                                {
                                                    <div class="wrapper">
                                                        <a class="btn btn-xs btn-primary" title="Modify"><span class="fa fa-edit" disabled></span></a>
                                                        @{
                                                            if (item.UserStatus == Enums.UserStatus.Active)
                                                            {
                                                                <button class="btn btn-xs btn-warning" title="Make Inactive" disabled><span class="fa fa-toggle-on"></span></button>
                                                            }
                                                            else if (item.UserStatus == Enums.UserStatus.InActive)
                                                            {
                                                                <button class="btn btn-xs btn-warning" title="Make Active" disabled><span class="fa fa-toggle-off"></span></button>
                                                            }
                                                        }
                                                    </div>
                                                }

                                                @if (ViewBag.AllowDelete)
                                                {
                                                    <button class="btn btn-xs btn-danger" title="Delete" data-toggle="modal" data-target="#modal-delete" onclick="setCaretakerId('@item.UserRegnId')"><span class="fa fa-minus-circle"></span></button>
                                                }
                                                else
                                                {
                                                    <div class="wrapper">
                                                        <button class="btn btn-xs btn-danger" title="Delete" disabled><span class="fa fa-minus-circle"></span></button>
                                                    </div>
                                                }
                                                @if (item.UserVerified == true)
                                                {

                                                    <button class="btn btn-xs btn btn-success" title="VerifyEmail" onclick="verifyEmail('@item.UserRegnId')" disabled="disabled"><span class="fa fa-check"></span></button>
                                                }
                                                else
                                                {
                                                    <button class="btn btn-xs btn btn-success" title="VerifyEmail" onclick="verifyEmail('@item.UserRegnId')"><span class="fa fa-check"></span></button>

                                                }

                                            </td>
                                        </tr>
                                    }
                                </tbody>

                            </table>
                            <div id="ResultList"></div>
                        </div>
                    </div>
                </div>
            }
        </div>
        @if (ViewBag.AllowDelete != null)
        {
            <div class="modal fade" id="modal-delete">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"> <span aria-hidden="true">&times;</span> </button>
                            <h4 class="modal-title">Delete Public User</h4>
                        </div>
                        <div class="modal-body">
                            Record will be deleted from system. Are you sure to delete?
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="deleteUser()">OK</button>
                            <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                    <!-- /.modal-content -->
                </div>
                <!-- /.modal-dialog -->
            </div>
        }

        <div class="modal fade" id="bookingDetailDialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document">
                <!-- Modal content-->
                <div class="modal-content panel">
                    <div class="modal-header panel-heading padding-10">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"> <span aria-hidden="true">&times;</span> </button>
                        <h4 class="modal-title">Reset Password</h4>
                    </div>
                    <div id="bookingDetail" class="modal-body no-padding">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary " onclick="SavePassword()">Save</button>
                        <button type="button" class="btn btn-primary " data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="spinner">

    </div>
    <script type="text/javascript">
        function setCaretakerId(userId) {
            $('#hdnCTId').val(userId);
        }
        function deleteUser() {
            debugger;
            $.ajax({
                type: 'POST',
                url: "../Admin/ChangeStatus",
                data: { userId: $('#hdnCTId').val(), status: 3 },
                success: function () {
                    window.location.reload();
                },
                error: function (data) {
                    logError(data.statusText + ' - Error occurred while deleting a Public User. Function: deleteUser(). Page: ManagePublicUser.cshtml');
                    //alert('Some network error has occurred. Please try again after some time.');
                }
            });
        }
        function verifyEmail(userId) {
            debugger;
            $.ajax({
                type: 'POST',
                url: "../PublicUser/VerifyEmail",
                data: { userId: userId },
                success: function () {
                    window.location.reload();
                },
                error: function (data) {
                    logError(data.statusText + ' - Error occurred while changing the Caregiver Status. Function: setCaretakerId(caretakerId). Page: ManageCaretaker.cshtml');
                    //alert('Some network error has occurred. Please try again after some time.');
                }
            });
        }

        function deleteUser() {
            $.ajax({
                type: 'POST',
                url: "../Admin/ChangeStatus",
                data: { userId: $('#hdnCTId').val(), status: 3 },
                success: function () {
                    window.location.reload();
                },
                error: function (data) {
                    logError(data.statusText + ' - Error occurred while deleting a Public User. Function: deleteUser(). Page: ManagePublicUser.cshtml');
                    //alert('Some network error has occurred. Please try again after some time.');
                }
            });
        }
        function changeStatus(userId, status) {
            $.ajax({
                type: 'POST',
                url: "../Admin/ChangeStatus",
                data: { userId: userId, status: status },
                success: function (data) {
                    window.location.reload();
                },
                error: function (data) {
                    logError(data.statusText + ' - Error occurred while changing a Public User Status. Function: changeStatus(userId, status). Page: ManagePublicUser.cshtml');
                    //alert('Some network error has occurred. Please try again after some time.');
                }
            });
        }
        $(document).ready(function () {
            $('#userList').DataTable({
                "pagingType": "full_numbers",
            });
            //dropdown disable as per Role
        var role = @Html.Raw(Json.Encode(ViewData["UserWorkRole"]));
        if (role == 1) {
            document.getElementById('countrydiv').style.display = "none";
        }
        if (role == 2) {
            document.getElementById('countrydiv').style.display = "none";
            document.getElementById('statediv').style.display = "none";
        }
        if (role == 3) {
            document.getElementById('countrydiv').style.display = "none";
            document.getElementById('statediv').style.display = "none";
            document.getElementById('citydiv').style.display = "none";

            }
            if (role == 4) {
                document.getElementById('main').style.display = "none";
            }

        })



        function showBookingDetails(bookingId) {
            // debugger;
            showProgress();
            $.ajax({
                url: "../Admin/UserLoginDetails/",
                data: {
                    bookingId: bookingId
                },
                success: function (feed) {
                    $('#bookingDetail').html(feed);
                    $('#bookingDetailDialog').modal('show');
                    spinnerVisible = true;
                    hideProgress();
                },
                error: function (feed) {
                    spinnerVisible = true;
                    hideProgress();
                    console.log(feed.responseText);
                    logError(feed.statusText + ' - Error occurred while showing a Public User Login details. Function: showBookingDetails(bookingId). Page: ManagePublicUser.cshtml');
                    //alert('Some network error has occurred. Please try again after some time.');
                }
            });
        }

        function SavePassword() {
            var newPswd = $("#newpswd").val();
            var cnfrmPswd = $("#cnfrmpswd").val();
            var emailID = $("#lblemail").text();
            var password = $("#lblpassword").text();

            var reg = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[~`!@@#\$%\^&\*,.])(?=.{8,})');
            if (reg.test(newPswd) == false) {
                alert('Password must be minimum 8 characters including 1 uppercase , one special character and alphanumeric characters.');
                return;
            }
            else if (newPswd != cnfrmPswd) {
                alert("'New Password' and 'Confirm Password' doesn't match.");
            }

            //if (newPswd.length < 8 || cnfrmPswd.length < 8) {
            //    alert("Password must be minimum 8 characters long");
            //    return;
            //}
            if (newPswd == cnfrmPswd) {
                $.ajax({
                    url: "../Admin/ChangePswd/",
                    data: {
                        newPswd: newPswd,
                        emailID: emailID
                    },
                    success: function (feed) {
                        $('#bookingDetailDialog').modal('hide');
                        alert("Password has been changed");
                    },
                    error: function (feed) {
                        console.log(feed.responseText);
                        logError(feed.statusText + ' - Error occurred while saving a Public User Login password. Function: SavePassword(). Page: ManagePublicUser.cshtml');
                        //alert('Some network error has occurred. Please try again after some time.');
                    }
                });
            }
            //else {
            //    alert("'New Password' and 'Confirm Password' doesn't match.");
            //}
        }

        function searchClientByLocation() {
            showProgress();
            SetDropdownValuesByRole();
            
            $.ajax({
                type: 'POST',
                url: "/Admin/ManagePublicUserByLocation",
                data: {
                    countryId: $('#ddlCountry1').val(),
                    stateId: $('#ddlStates1').val(),
                    cityId: $('#ddlCity1').val()
                },
                success: function (feed) {
                    spinnerVisible = true;
                    hideProgress();
                    $('#userList').hide();
                    $('#ResultList').html(feed);


                },
                error: function (data) {
                    spinnerVisible = true;
                    hideProgress();
                    logError(data.statusText + ' - Error occurred while fetching data. Function: searchClientByLocation(). Page: ManageClient.cshtml');
                    //alert('Some network error has occurred. Please try again after some time.');
                }
            });
        }

           function SetDropdownValuesByRole() {

        var role = @Html.Raw(Json.Encode(ViewData["UserWorkRole"]));
            if (role == 1) {
                $('#ddlCountry1').val(@country);
                return;
            }
            if (role == 2) {
                 $('#ddlCountry1').val(@country);
                $('#ddlStates1').val(@state);
                return;
            }
            if (role == 3) {
                 $('#ddlCountry1').val(@country);
                $('#ddlStates1').val(@state);
                $('#ddlCity1').val(@city);
                return;
        }
        return;
        }
        $("#ddlCity1").change(function () {
            var cityId = $('#ddlCity1').val();
            //alert(stateId);

            $.ajax({
                url: '/Admin/GetBranch?city=' + cityId,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                datatype: JSON,
                success: function (data) {
                    console.log(data);
                    var ddlState = $("#Branch1");
                    ddlState.empty().append('<option selected="selected" value="0">--Select--</option>');

                    $.each(data, function (data, value) {

                        ddlState.append($("<option></option>").val(value.BranchId).html(value.BranchName));
                    });

                }
            });
        });
    </script>
</body>
</html>


