@model Nirast.Pcms.Web.Models.ClientModel
@{
    Layout = "~/Views/Shared/_AdminDashboardLayout.cshtml";
}
@Styles.Render("~/css/CustomStyles.css")
@Styles.Render("~/build/css/Common.css")

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Caregiver Booking Report</title>
</head>

<body>
    <hr />
    @if (ViewBag.Error != null)
    {
        <div><p class="alert custom-alert-danger col-md-6 col-md-offset-3 statusmessage">@ViewBag.Error</p></div>
    }
    else
    {
        <div class="row profile_Style">
            <div class="panel panel-default report-style " id="main">
                <div class="panel-heading">
                    <h4>Select Location</h4>
                </div>
                <div class="panel-body">
                    <div class="form-horizontal">
                        <div class="row">
                            <div class="col-md-2" id="countrydiv">
                                <label class="label-style">Country</label>
                                @Html.DropDownListFor(model => model.CountryId1, ViewData["ListCountry1"] as SelectList, "--Select--", new { @Id = "ddlCountry1", @class = "form-control labelStyle", @onchange = "GetStates1()" })
                                @Html.ValidationMessageFor(model => model.CountryId1, "", new { @class = "no-padding required" })
                            </div>
                            <div class="col-md-2" id="statediv">
                                <label class="label-style">State</label>
                                @Html.DropDownListFor(model => model.StateId1, ViewData["StateList1"] as SelectList, "--Select--", new { @Id = "ddlStates1", @class = "form-control labelStyle", @onchange = "GetCities1()" })
                                @Html.ValidationMessageFor(model => model.StateId1, "", new { @class = "no-padding required" })
                            </div>
                            <div class="col-md-2" id="citydiv">
                                <label class="label-style">City</label>
                                @Html.DropDownListFor(model => model.CityId1, ViewData["ListCity1"] as SelectList, "--Select--", new { @Id = "ddlCity1", @class = "form-control labelStyle", onchange = "SetCity1()" })
                                @Html.ValidationMessageFor(model => model.CityId1, "", new { @class = "no-padding required" })
                            </div>
                            <div class="col-md-2" id="branchdiv">
                                <label class="label-style">Franchise/Branch</label>
                                @Html.DropDownListFor(model => model.BranchId2, ViewData["ListBranch"] as SelectList, "--Select--", new { @Id = "Branch1", @class = "form-control labelStyle", onchange = "SetCity1()" })
                                @Html.ValidationMessageFor(model => model.BranchId2, "", new { @class = "no-padding required" })
                            </div>
                            <div class="col-md-3" style="margin-top:39px;">
                                <button class="btn btn-primary float-left editButton" title="Edit" @*onclick="EditClick()*@>Submit</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="panel panel-default report-style ">
                <div class="panel-heading">
                    <h4>User Booking Report</h4>
                </div>
                <div class="panel-body">
                    <div class="form-horizontal">
                        <div class="col-md-12 innerDiv">
                            <div class="row">
                                <div class="col-md-3 col-lg-3">
                                    <label class="label-style">Service:</label>
                                    @Html.DropDownList("ddlService", new SelectList(ViewBag.Service, "Value", "Text"), "--Select--", new { @class = "form-control col-md-3 labelStyle" })
                                </div>
                                <div class="col-md-3  col-lg-3">
                                    <label class="label-style">Date Range : </label>
                                    @Html.DropDownList("ddlSearchRange", ViewData["listPaySearch"] as SelectList, new { @class = "form-control col-md-3 labelStyle", autocomplete = "off" })
                                </div>
                                <div class="col-md-3  col-lg-3">
                                    <label id="lblfrmdate" class="label-style">From Date :</label>
                                    @Html.TextBox("FromDate", "", new { @class = "datePickerControlStyle datetimepicker form-control labelStyle", @id = "txtFromDate", @placeholder = "From Date", @onchange = "dateRangeValidation(this.value)" })

                                    <label id="lblyear" class="label-style">Year :</label>
                                    @Html.DropDownList("ddlyear", ViewData["listYears"] as SelectList, new { @class = "form-control col-md-12 labelStyle", @id = "ddlYearly" })
                                </div>
                                <div class="col-md-3  col-lg-3">
                                    <label id="lblmonth" class="label-style">Month : </label>
                                    @Html.DropDownList("ddlMonth", ViewData["listMonths"] as SelectList, new { @class = "form-control col-md-12 labelStyle", @id = "ddlMonthly" })
                                    <label id="lbltodate" class="label-style">To Date : </label>
                                    @Html.TextBox("ToDate", "", new { @class = "datePickerControlStyle datetimepicker form-control labelStyle", @id = "txtToDate", @placeholder = "To Date", @onchange = "dateRangeValidation(this.value)" })
                                </div>
                            </div>


                        </div>
                        <div class="col-md-12" style="padding-bottom: 15px;">
                            <div class="col-md-5"></div>
                            <div class="col-md-3 text-center">
                                <button type="submit" id="btnSearch" class="btn btn-primary m-t-10">Search</button>
                                <label class="btn btn-primary m-t-10" value="Cancel" onclick="reload()">Cancel</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="container animsition" style="padding-bottom: 15px;">
            <div class="row ">
                <div class="equal-height-panels">
                    <div class="ui segment">
                        <div id="dvMain" name="dvMain">
                            <div class="clr"></div>
                            <div class="col-md-12">
                                <div class="signature-pad col-md-12">
                                    <div class="panel panel-group panel-success">
                                        <div class="panel-heading"><h5>Report</h5></div>
                                        <div class="panel-body" style="height:550px">
                                            <div id="policyContent" type="text" readonly="readonly">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="spinner">

        </div>
        <script>
               $(document).ready(function () {

                    var role = @Html.Raw(Json.Encode(ViewData["UserWorkRole"]));
                    if (role == 1) {


                        document.getElementById('countrydiv').style.display = "none";

                    }
                    if (role == 2) {

                        document.getElementById('countrydiv').style.display = "none";
                        document.getElementById('statediv').style.display = "none";

                    }
                    if (role == 3) {
                        document.getElementById('countrydiv').style.display = "none";
                        document.getElementById('statediv').style.display = "none";
                        document.getElementById('citydiv').style.display = "none";
                        
                   }
                   if (role == 4) {
                       document.getElementById('main').style.display = "none";
                   }
                });
            $("#ddlCity1").change(function () {
                var cityId = $('#ddlCity1').val();
                $.ajax({
                    url: '/Admin/GetBranch?city=' + cityId,
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    datatype: JSON,
                    success: function (data) {
                        console.log(data);
                        var ddlState = $("#Branch1");
                        ddlState.empty().append('<option selected="selected" value="0">--Select--</option>');

                        $.each(data, function (data, value) {

                            ddlState.append($("<option></option>").val(value.BranchId).html(value.BranchName));
                        });

                    }
                });
            });

            $(function () {

                $('#ddlCategory').change(function () {
                            populateCaretaker();
                })

                $('#ddlService').change(function () {
                    populateCaretaker();
                })

                function populateCaretaker() {
                    if ($('#ddlService option:selected').text() != '' && $('#ddlService option:selected').text() != '--Select--') {
                        var serviceid = $('#ddlService').val();

                        $.ajax({
                            url: '/Client/LoadCaretakersByService',
                            type: "GET",
                            dataType: "JSON",
                            data: { serviceid: serviceid },
                            success: function (data) {
                                $("#ddCareTaker").html(""); // clear before appending new list
                                $("#ddCareTaker").append(
                                      $('<option></option>').val("").html("--Select--"));
                                $.each($.parseJSON(data), function (i, care) {
                                    $("#ddCareTaker").append(

                                        $('<option></option>').val(care.CaretakerId).html(care.CareTakerName));

                                });
                                if (selectedEvent != null) {
                                    $('#ddCareTaker').val(selectedEvent.caretaker);
                                }
                                else {
                                    $('#ddCareTaker').val("--Select--");
                                }

                            },
                            error: function (data) {
                                logError(data.statusText + ' - Error occurred while populating the Caretakers. Function: populateCaretaker(). Page: CaretakerBookingReport.cshtml');
                                //alert('Some network error has occurred. Please try again after some time.');
                            }
                        });
                    }
                }


                $('#txtFromDate').datepicker({
                    dateFormat: "@System.Configuration.ConfigurationManager.AppSettings["DTDateFormat"].ToString()",
                    showStatus: true,
                    showWeeks: true,
                    currentText: 'Now',
                    autoSize: true,
                    gotoCurrent: true,
                    showAnim: 'blind',
                    changeMonth: true,
                    changeYear: true,
                    highlightWeek: true
                });

                $('#txtToDate').datepicker({
                    dateFormat: "@System.Configuration.ConfigurationManager.AppSettings["DTDateFormat"].ToString()",
                    showStatus: true,
                    showWeeks: true,
                    currentText: 'Now',
                    autoSize: true,
                    gotoCurrent: true,
                    showAnim: 'blind',
                    changeMonth: true,
                    changeYear: true,
                    highlightWeek: true
                });

                $("#divyear").hide();
                $("#divmonth").hide();

                $("#lblyear").hide();
                $("#lblmonth").hide();
                $("#lblfrmdate").hide();
                $("#lbltodate").hide();

                $("#ddlYearly").hide();
                $("#ddlMonthly").hide();
                $("#txtFromDate").hide();
                $("#txtToDate").hide();

                $("#ddlSearchRange").change(function () {
                    var currentTime = new Date();
                    var year = currentTime.getFullYear();
                    if ($(this).val() == "1") { // It doesn't work over here.
                        $("#ddlYearly").show();
                        $("#divyear").show();
                        $("#divmonth").hide();
                        $("#ddlMonthly").hide();
                        $("#txtFromDate").hide();
                        $("#txtToDate").hide();

                        $("#lblyear").show();
                        $("#lblmonth").hide();
                        $("#lblfrmdate").hide();
                        $("#lbltodate").hide();
                        //document.getElementById("ddlYearly").selectedIndex = year.toString();
                        $("#ddlYearly").val(year);
                        document.getElementById("ddlMonthly").selectedIndex = "0";
                        document.getElementById("txtFromDate").value = "";
                        document.getElementById("txtToDate").value = "";

                    } else if ($(this).val() == "2") {
                        $("#divyear").show();
                        $("#divmonth").show();
                        $("#ddlYearly").show();
                        $("#ddlMonthly").show();
                        $("#txtFromDate").hide();
                        $("#txtToDate").hide();

                        $("#lblyear").show();
                        $("#lblmonth").show();
                        $("#lblfrmdate").hide();
                        $("#lbltodate").hide();

                        $("#ddlYearly").val(year);
                        $("#ddlMonthly").val(currentTime.getMonth() + 1);
                        document.getElementById("txtFromDate").value = "";
                        document.getElementById("txtToDate").value = "";
                    }
                    else if ($(this).val() == "3") {
                        $("#divyear").show();
                        $("#divmonth").show();
                        $("#ddlYearly").hide();
                        $("#ddlMonthly").hide();
                        $("#txtFromDate").show();
                        $("#txtToDate").show();

                        $("#lblyear").hide();
                        $("#lblmonth").hide();
                        $("#lblfrmdate").show();
                        $("#lbltodate").show();
                        $("#ddlYearly").val(year);
                        document.getElementById("ddlMonthly").selectedIndex = "0";
                    }
                    else {
                        $("#divyear").hide();
                        $("#divmonth").hide();
                        $("#ddlYearly").hide();
                        $("#ddlMonthly").hide();
                        $("#txtFromDate").hide();
                        $("#txtToDate").hide();

                        $("#lblyear").hide();
                        $("#lblmonth").hide();
                        $("#lblfrmdate").hide();
                        $("#lbltodate").hide();
                        document.getElementById("txtFromDate").value = "";
                        document.getElementById("txtToDate").value = "";
                        $("#ddlYearly").val(year);
                        $("#ddlMonthly").val(currentTime.getMonth() + 1);
                    }
                });


                $('#btnSearch').click(function () {
                    if ($("#ddlSearchRange").val() == '2') {
                        if ($("#ddlMonthly").val() == '0') {
                            alert('Select a month.');
                            return false;
                        }
                    } else if ($("#ddlSearchRange").val() == '3') {
                        if ($("#txtFromDate").val() == '') {
                            alert('Select from date.');
                            return false;
                        }
                        if ($("#txtToDate").val() == '') {
                            alert('Select to date.');
                            return false;
                        }
                    }
                    showProgress();
                    //var caretakerType = ($("#ddlCategory").val() != '') ? $("#ddlCategory").val() : null;
                    var service = ($("#ddlService").val() != '') ? $("#ddlService").val() : null;
                    //var caretaker = ($("#ddCareTaker").val() != '') ? $("#ddCareTaker").val() : null;                    //var caretaker = ($("#ddCareTaker").val() != '') ? $("#ddCareTaker").val() : null;
                    var year = ($("#ddlYearly").val() != '') ? $("#ddlYearly").val() : null;
                    var month = ($("#ddlMonthly").val() != '') ? $("#ddlMonthly").val() : null;
                    var fromdate = ($("#txtFromDate").val() != '') ? $("#txtFromDate").val() : null;
                    var todate = ($("#txtToDate").val() != '') ? $("#txtToDate").val() : null;
                    var Service = $("#ddlService option:selected").text();
                    //ASPX page URL to load report
                    var src = '../Reports/CaretakerBookingReport.aspx?';
                    //setTimeout(function () {

                    //    hideProgress();

                    //}, 2000);


                    //We can add parameters here
                    //src = src + "categoryId=" + caretakerType;
                    src = src + "serviceId=" + service;
                    //src = src + "&caretakerName=" + caretaker;
                    src = src + "&year=" + year;
                    src = src + "&month=" + month;
                    src = src + "&fromdate=" + fromdate;
                    src = src + "&todate=" + todate;
                    src = src + "&Service=" + Service;

                    $("#policyContent").html('<iframe  src="' + src + '"style="width: 100%; height: 500px" onload="hideProgress()"></iframe>');

                });

            });

        </script>
    }
</body>
</html>
<style>
    .profile_Style {
        margin-top: 40px;
    }
</style>

