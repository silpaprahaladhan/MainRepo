@model Nirast.Pcms.Web.Models.Cities
@{
    ViewBag.Title = "City";
    Layout = "~/Views/Shared/_AdminDashboardLayout.cshtml";
}

<head>
    <script type="text/javascript" language="javascript" src="~/js/jquery.dataTables.min.js"></script>

    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.16/css/jquery.dataTables.min.css">
    @Styles.Render("~/css/CustomStyles.css")
    @Styles.Render("~/build/css/Common.css")

    @*<script type="text/javascript">

        </script>*@

</head>
<div class="container animsition">

    <div class="row profile_Style">
        <div class="equal-height-panels">
            @if (ViewBag.Error != null)
            {
                <div><p class="alert custom-alert-danger col-md-6 col-md-offset-3 statusmessage">@ViewBag.Error</p></div>
            }
            else
            {
                <div class="col-lg-12 col-md-12 col-sm-12 ">
                    @if (TempData["Success"] != null && TempData["Success"] != "")
                    {
                        <p class="alert alert-success statusmessage">@TempData["Success"]</p>
                    }
                    @if (TempData["Failure"] != null && TempData["Failure"] != "")
                    {
                        <p class="alert custom-alert-danger statusmessage">@TempData["Failure"]</p>
                    }
                    @using (Html.BeginForm("CreateCity", "Admin", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h4>Manage Cities</h4>
                            </div>
                            <div class="panel-body">
                                <div class="col-md-12 col-lg-12 form-group">
                                    <div class="row">
                                        <div class="col-md-4 col-lg-4">
                                            @Html.HiddenFor(m => m.CityId)
                                            @Html.Label("Country", new { @class = "control-label label-style marginTopStyle" })
                                            @Html.DropDownListFor(model => model.CountryId, ViewData["listCountry"] as SelectList, "--Select--", new { @Id = "ddlCountry", @class = "form-control labelStyle", @onchange = "fillStates()" })
                                            @Html.TextBoxFor(Model => Model.CountryName, "", new { @style = "display:none", @class = "form-control labelStyle ", @id = "CountryName" })
                                            @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger required" })
                                        </div>
                                        <div class="col-md-4 col-lg-4">

                                            @Html.HiddenFor(m => m.StateId)
                                            @if(ViewData["listState"]!=null){
                                            @Html.Label(Resource.State, new { @class = "control-label label-style marginTopStyle" })<span class="mandatoryField">*</span>
                                            @Html.DropDownListFor(model => model.StateId, ViewData["listState"] as SelectList, "--Select--", new { @Id = "ddlStates", @class = "form-control labelStyle", @onchange = "SelectedState()" })
                                             @Html.TextBoxFor(Model => Model.StateName, "", new {@style="display:none", @class = "form-control labelStyle " ,@id= "StateName" })                                            
                                            @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger required" })
                                            }
                                        </div>
                                        <div class="col-md-4 col-lg-4">
                                            @if (ViewData["listState"] != null)
                                            {
                                                @Html.Label("City", new { @class = "control-label label-style marginTopStyle" })<span class="mandatoryField">*</span>
                                                @Html.TextBoxFor(Model => Model.CityName, "", new { @class = "form-control labelStyle" })
                                                @Html.ValidationMessageFor(model => model.CityName, "", new { @class = "text-danger required" })
                                            }
                                            </div>
                                    </div>
                                </div>
                                <div class="text-center form-group city">
                                    @if (ViewBag.AllowEdit)
                                    {
                                        <input type="submit" class="btn btn-primary m-t-10" value="Save">
                                        <label class="btn btn-primary  m-t-10" value="Cancel" onclick="reload()">Cancel</label>
                                    }
                                    else
                                    {
                                        <div class="wrapper">
                                            <input type="submit" class="btn btn-primary m-t-10" value="Save" disabled>
                                            <label class="btn btn-primary m-t-10" value="Cancel" onclick="reload()">Cancel</label>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                    <div class="col-lg-12 col-md-12 col-sm-12 no-padding" id="CityResult">
                        @*@{Html.RenderAction("CityList");}*@
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<div id="spinner"></div>

<script type="text/javascript">
    $(function () {


        $(document).ready(function () {
            $('#CityList').DataTable({
                "pagingType": "full_numbers"
            });
            fillStates();
            
            $("#ddlYearly").hide();
            $("#ddlMonthly").hide();
            $("#txtFromDate").hide();
            $("#txtToDate").hide();
            $("#ddlSearchRange").change(function () {
                if ($(this).val() == "1") { // It doesn't work over here.
                    $("#ddlYearly").show();
                    $("#ddlMonthly").hide();
                    $("#txtFromDate").hide();
                    $("#txtToDate").hide();
                    document.getElementById("ddlCountry").selectedIndex = "1";
                    document.getElementById("ddlYearly").selectedIndex = "0";
                    document.getElementById("ddlMonthly").selectedIndex = "0";
                    document.getElementById("txtFromDate").value = "";
                    document.getElementById("txtToDate").value = "";

                } else if ($(this).val() == "2") {
                    $("#ddlYearly").show();
                    $("#ddlMonthly").show();
                    $("#txtFromDate").hide();
                    $("#txtToDate").hide();
                    document.getElementById("ddlYearly").selectedIndex = "0";
                    document.getElementById("txtFromDate").value = "";
                    document.getElementById("txtToDate").value = "";
                }
                else if ($(this).val() == "3") {
                    $("#ddlYearly").hide();
                    $("#ddlMonthly").hide();
                    $("#txtFromDate").show();
                    $("#txtToDate").show();
                    document.getElementById("ddlYearly").selectedIndex = "0";
                    document.getElementById("ddlMonthly").selectedIndex = "0";
                }
                else {
                    $("#ddlYearly").hide();
                    $("#ddlMonthly").hide();
                    $("#txtFromDate").hide();
                    $("#txtToDate").hide();
                    document.getElementById("txtFromDate").value = "";
                    document.getElementById("txtToDate").value = "";
                    document.getElementById("ddlYearly").selectedIndex = "0";
                    document.getElementById("ddlMonthly").selectedIndex = "0";
                }
            });
        });
    });

    function loadSelectedCities() {
        debugger;
        var flag = '';
        var val = '';
        if ($("#ddlStates").val() > 0) {
            flag = 'StateId';
            val = $("#ddlStates").val()
        } else if ($("#ddlCountry").val() > 0) {
            flag = 'CountryId';
            val = $("#ddlCountry").val()
        }
        $.ajax({
            url: '/Admin/CityList',
            type: "GET",
            data: { flag: flag, value: val },
            success: function (data) {

                $("#CityResult").html(""); // clear before appending new list
                $("#CityResult").html(data);
                $('#CityList').DataTable({
                    "pagingType": "full_numbers"
                });
            },
                    error: function (data) {
                        //alert('Some network error has occurred. Please try again after some time.');
                        logError(data.statusText + ' - Error occurred while populating the City for Flag: ' + flag + ', Value: ' + val + ' . Function: loadSelectedCities(). Page: City.cshtml');
                    }
        });
    }

    function fillStates() {        debugger;        var countryId = ($('#ddlCountry').val() === "" || $('#ddlCountry').val() === undefined) ? 0 : $('#ddlCountry').val();        if (countryId === 0)            countryId = -1;        $('#CountryId').val(countryId);        spinnerVisible = true;        showProgress();        $.ajax({            url: '/Admin/LoadStatesByCountryId',            type: "GET",            dataType: "JSON",            data: { CountryId: countryId },            success: function (data) {                $("#ddlStates").html(""); // clear before appending new list                $("#ddlStates").append($('<option></option>').val("").html("--Select--"));                $.each($.parseJSON(data), function (i, state) {                    $("#ddlStates").append($('<option></option>').val(state.StateId).html(state.Name));                })                spinnerVisible = true;                hideProgress();                loadSelectedCities();                $('#lblPhoneCodePrimary').text($.parseJSON(data)[0] === undefined ? '+1' : $.parseJSON(data)[0].PhoneCode);                $('#lblPhoneCodeSecondary').text($.parseJSON(data)[0] === undefined ? '+1' : $.parseJSON(data)[0].PhoneCode);            },            error: function (data) {                logError(data.statusText + ' - Error occurred while populating the States for CountryId: ' + countryId + '. Function: loadSelectedCities(). Page: City.cshtml');                //alert('Some network error has occurred. Please try again after some time.');            }        });    }


    function SelectedState() {

        var nm = $("#ddlCountry option:selected").text();
        var st = $("#ddlStates option:selected").text();
        
        document.getElementById("CountryName").value = nm;
        document.getElementById("StateName").value = st;
      
        $('#StateId').val($('#ddlStates').val());
        loadSelectedCities();

    }
</script>